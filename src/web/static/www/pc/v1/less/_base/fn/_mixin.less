@import "./_variables";
.set-placeholder(@color:#afafaf){
  //placeholder
  &::-webkit-input-placeholder { /* WebKit browsers */
    color: @color;
  }
  &:-moz-placeholder { /* Mozilla Firefox 4 to 18 */
    color: @color;
  }
  &::-moz-placeholder { /* Mozilla Firefox 19+ */
    color: @color;
  }
  &:-ms-input-placeholder { /* Internet Explorer 10+ */
    color: @color;
  }
}
.border-box(){
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
}
.content-box(){
    -webkit-box-sizing:content-box;
    -moz-box-sizing:  content-box;
    box-sizing:content-box;
}
//垂直 水平居中
.v-center(){
  display: -webkit-box;
  -webkit-box-orient: horizontal;
  -webkit-box-pack: center;
  -webkit-box-align: center;

  display: -moz-box;
  -moz-box-orient: horizontal;
  -moz-box-pack: center;
  -moz-box-align: center;

  display: -o-box;
  -o-box-orient: horizontal;
  -o-box-pack: center;
  -o-box-align: center;

  display: -ms-box;
  -ms-box-orient: horizontal;
  -ms-box-pack: center;
  -ms-box-align: center;

  display: box;
  box-orient: horizontal;
  box-pack: center;
  box-align: center;
}
.display-box(){
    display: box;
    display: -moz-box;
    display: -webkit-box;
    width: 100%;
}
.flex1(){
  -moz-box-flex:1;
  -webkit-box-flex:1;
  box-flex:1;
  display: block;
  width: 100%;
}

.inline-block(){
  display: inline-block;
  vertical-align: middle;
  font-style: normal;
}
//mixin fun
//设置单行文本省略号
.ellipsis(@w:false) {
  & when not(@bgimage=false){
    width: @w;
  }
	overflow:hidden;
	white-space:nowrap;
	text-overflow:ellipsis;
	text-overflow: ellipsis;/* IE/Safari */
	-ms-text-overflow: ellipsis;
	-o-text-overflow: ellipsis;/* Opera */
	-moz-binding: url("ellipsis.xml#ellipsis");/*FireFox */
}
// 设置透明度
.opacity(@opacity:0.2) {
	@filteropa:@opacity* 100;
    filter:alpha(opacity=@filteropa);
    -moz-opacity:@opacity;
    -khtml-opacity: @opacity;
    opacity: @opacity;
}
//设置边框圆角
.border-radius(@radius) {
  -webkit-border-radius: @radius;
     -moz-border-radius: @radius;
          border-radius: @radius;
}
//设置pre-wrap
.pre-wrap(){
  text-wrap: wrap;
  white-space: -moz-pre-wrap;
  white-space: pre-wrap;
  word-wrap: break-word;
}
//设置阴影
.box-shadow(@arguments:1px 1px 1px rgba(0, 0, 0, .6)) {
  -webkit-box-shadow: @arguments;
     -moz-box-shadow: @arguments;
          box-shadow: @arguments;
}
//ico
.ico-create(
    @w:false;
    @h:false;
    @padding:false;
    @margin:false;
    @bgimage:none;
    @repeat:no-repeat;
    @position:0 0
  ){
  & when not(@bgimage=false){
    background-image: @bgimage;
  }
  & when not(@repeat=false){
    background-repeat: @repeat;
  }
  & when not(@padding=false){
    padding: @padding;
  }
  & when not(@margin=false){
    margin: @margin;
  }
  & when not(@position=false){
    background-position:@position;
  }
  & when not(@w=false){
    width: @w;
  }
  & when not(@w=false){
    height: @h;
  }
}
//btn
.set-size(
    @w:false;
    @h:false;
    @padding:false;
    @margin:false;
    @font-size:false;
    @border:false;
    @border-width:false;
  ){
  & when not(@w=false){
    width: @w;
  }
  & when not(@h=false){
    height: @h;
    line-height: @h - 1;
  }
  & when not(@padding=false){
    padding: @padding;
  }
  & when not(@margin=false){
    margin: @margin;
  }
  & when not(@font-size=false){
    font-size: @font-size;
  }
  & when not(@border=false){
    border: @border;
  }
  & when not(@border-width=false){
    border-width: @border-width;
  }
}


.btn-color(
  @bgcolor:false;@bordercolor:false;@color:false;
  @hover-bgcolor:false; @hover-bordercolor:false; @hover-color:false;
  @disabled-bgcolor:false;@disabled-bordercolor:false;@disabled-color:false;
  ){
  & when not(@bgcolor=false){
    background-color: @bgcolor;
  }
  & when not(@bordercolor=false){
    border-color: @bordercolor;
  }
  & when not(@color=false){
    color: @color;
  }
  &:active,
  &:hover {
    & when not(@hover-bgcolor=false){
      background-color: @hover-bgcolor;
    }
    & when not(@hover-bordercolor=false){
      border-color: @hover-bordercolor;
    }
    & when not(@hover-color=false){
      color: @hover-color;
    }
    & when (@hover-color=false){
      color: @color;
    }
  }
  &[disabled] {
    & when not(@disabled-bgcolor=false){
      background-color: @disabled-bgcolor;
    }
    & when not(@disabled-bordercolor=false){
      border-color: @disabled-bordercolor;
    }
    & when not(@disabled-color=false){
      color: @disabled-color;
    }
  }
}
//form-control
.form-control-color(
  @bgcolor:false;@bordercolor:false;@color:false;
  @focus-bgcolor:false; @focus-bordercolor:false; @focus-color:false;
  @disabled-bgcolor:false;@disabled-bordercolor:false;@disabled-color:false;
  ){
  & when not(@bgcolor=false){
    background-color: @bgcolor;
  }
  & when not(@bordercolor=false){
    border-color: @bordercolor;
  }
  & when not(@color=false){
    color: @color;
  }
  &:focus{
    & when not(@focus-bgcolor=false){
      background-color: @focus-bgcolor;
    }
    & when not(@focus-bordercolor=false){
      border-color: @focus-bordercolor;
    }
    & when not(@focus-color=false){
      color: @focus-color;
    }
  }
  &[disabled] {
    & when not(@disabled-bgcolor=false){
      background-color: @disabled-bgcolor;
    }
    & when not(@disabled-bordercolor=false){
      border-color: @disabled-bordercolor;
    }
    & when not(@disabled-color=false){
      color: @disabled-color;
    }
  }
}